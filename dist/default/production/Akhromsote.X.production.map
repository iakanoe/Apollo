Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\Akhromsote.X.production.sym \
  --cmf=dist/default/production\Akhromsote.X.production.cmf -z -Q18F2550 \
  -oC:\Users\Ianick\AppData\Local\Temp\sd4g.2 \
  -Mdist/default/production/Akhromsote.X.production.map -E1 -ver=XC8 \
  -ASTACK=060h-07ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0800h-08FFhx120 -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-07FFh -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0800h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Ianick\AppData\Local\Temp\sd4g.obj \
  dist/default/production\Akhromsote.X.production.obj 

Object code version is 3.11

Machine type is 18F2550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Ianick\AppData\Local\Temp\sd4g.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Akhromsote.X.production.obj
                intcode                               8        8        E        4       0
                temp                                 35       35        1        1       1
                text16                              598      598       36        4       0
                intcode_body                        4E8      4E8       72        4       0
                text14                              66C      66C        A        4       0
                text13                              67C      67C        6        4       0
                text12                              55A      55A       3E        4       0
                text11                              662      662        A        4       0
                text10                              636      636       12        4       0
                text9                               624      624       12        4       0
                text8                               656      656        C        4       0
                text7                               5CE      5CE       22        4       0
                text6                               464      464       84        4       0
                text5                               2D8      2D8       CA        4       0
                text4                               3A2      3A2       C2        4       0
                text3                               60A      60A       1A        4       0
                text2                               648      648        E        4       0
                text1                                1A       1A      2BE        4       0
                text0                               676      676        6        4       0
                cstackCOMRAM                          1        1       2B        1       1
                bssCOMRAM                            2C       2C        9        1       1
                cinit                               5F0      5F0       1A        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text16                              598      598       36         0
                intcode_body                        4E8      4E8       72         0
                text14                              66C      66C        A         0
                text13                              67C      67C        6         0
                text12                              55A      55A       3E         0
                text11                              662      662        A         0
                text10                              636      636       12         0
                text9                               624      624       12         0
                text8                               656      656        C         0
                text7                               5CE      5CE       22         0
                text6                               464      464       84         0
                text5                               2D8      2D8       CA         0
                text4                               3A2      3A2       C2         0
                text3                               60A      60A       1A         0
                text2                               648      648        E         0
                text1                                1A       1A      2BE         0
                text0                               676      676        6         0
                cinit                               5F0      5F0       1A         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 35       35        1         1
                cstackCOMRAM                          1        1       2B         1
                bssCOMRAM                            2C       2C        9         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000035  000036         1       1  COMRAM  
                intcode                        000008  00067A  000682         4       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000036-0007FF              7CA
        CODE             000004-000007                4
                         000682-007FFF             797E
        COMRAM           000036-00005F               2A
        CONST            000004-000007                4
                         000682-007FFF             797E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-007FFF             7800
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?___awdiv                cstackCOMRAM 00000F
?_millis                 cstackCOMRAM 00000F
_ADCON1bits              (abs)        000FC1
_CCP1CONbits             (abs)        000FBD
_CCP2CONbits             (abs)        000FBA
_CCPR1L                  (abs)        000FBE
_CCPR2L                  (abs)        000FBB
_INTCONbits              (abs)        000FF2
_ISR                     intcode      000008
_LATAbits                (abs)        000F89
_LATBbits                (abs)        000F8A
_LATCbits                (abs)        000F8B
_PORTAbits               (abs)        000F80
_PR2                     (abs)        000FCB
_T0CON                   (abs)        000FD5
_T2CON                   (abs)        000FCA
_TRISAbits               (abs)        000F92
_TRISBbits               (abs)        000F93
_TRISCbits               (abs)        000F94
__CFG_BOR$OFF            (abs)        000000
__CFG_BORV$0             (abs)        000000
__CFG_CCP2MX$ON          (abs)        000000
__CFG_CP0$OFF            (abs)        000000
__CFG_CP1$OFF            (abs)        000000
__CFG_CP2$OFF            (abs)        000000
__CFG_CP3$OFF            (abs)        000000
__CFG_CPB$OFF            (abs)        000000
__CFG_CPD$OFF            (abs)        000000
__CFG_CPUDIV$OSC1_PLL2   (abs)        000000
__CFG_EBTR0$OFF          (abs)        000000
__CFG_EBTR1$OFF          (abs)        000000
__CFG_EBTR2$OFF          (abs)        000000
__CFG_EBTR3$OFF          (abs)        000000
__CFG_EBTRB$OFF          (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_FOSC$HSPLL_HS      (abs)        000000
__CFG_IESO$OFF           (abs)        000000
__CFG_LPT1OSC$OFF        (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$OFF          (abs)        000000
__CFG_PBADEN$OFF         (abs)        000000
__CFG_PLLDIV$5           (abs)        000000
__CFG_PWRT$OFF           (abs)        000000
__CFG_STVREN$OFF         (abs)        000000
__CFG_USBDIV$2           (abs)        000000
__CFG_VREGEN$OFF         (abs)        000000
__CFG_WDT$OFF            (abs)        000000
__CFG_WDTPS$32768        (abs)        000000
__CFG_WRT0$OFF           (abs)        000000
__CFG_WRT1$OFF           (abs)        000000
__CFG_WRT2$OFF           (abs)        000000
__CFG_WRT3$OFF           (abs)        000000
__CFG_WRTB$OFF           (abs)        000000
__CFG_WRTC$OFF           (abs)        000000
__CFG_WRTD$OFF           (abs)        000000
__CFG_XINST$OFF          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbank6                 bank6        000000
__Hbank7                 bank7        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hend_init              end_init     00001A
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000016
__Hintcode               intcode      000016
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000016
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000016
__Hram                   ram          000000
__Hramtop                ramtop       000800
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000004
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000000
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        000036
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000036
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext16                text16       000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbank6                 bank6        000000
__Lbank7                 bank7        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lend_init              end_init     000016
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000016
__Lintcode               intcode      000008
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000016
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000016
__Lram                   ram          000000
__Lramtop                ramtop       000800
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000000
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000035
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext16                text16       000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        000036
__S2                     (abs)        000000
___awdiv                 text6        000464
___awdiv@counter         cstackCOMRAM 000013
___awdiv@dividend        cstackCOMRAM 00000F
___awdiv@divisor         cstackCOMRAM 000011
___awdiv@quotient        cstackCOMRAM 000015
___awdiv@sign            cstackCOMRAM 000014
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000010
___rparam_used           (abs)        000001
___sp                    stack        000000
__accesstop              (abs)        000060
__activetblptr           (abs)        000002
__end_of_ISR             intcode_body 00055A
__end_of___awdiv         text6        0004E8
__end_of__initialization cinit        0005FC
__end_of_initEtc         text14       000676
__end_of_initInterrupts  text13       000682
__end_of_initMotors      text12       000598
__end_of_initTimer       text11       00066C
__end_of_initUI          text10       000648
__end_of_loop            text1        0002D8
__end_of_main            text0        00067C
__end_of_millis          text9        000636
__end_of_newStatus       text8        000662
__end_of_setLEDs         text7        0005F0
__end_of_setLeftMotor    text5        0003A2
__end_of_setMotors       text3        000624
__end_of_setRightMotor   text4        000464
__end_of_setStatus       text2        000656
__end_of_timerInterrupt  text16       0005CE
__initialization         cinit        0005F0
__mediumconst            mediumconst  000000
__pbssCOMRAM             bssCOMRAM    00002C
__pcinit                 cinit        0005F0
__pcstackCOMRAM          cstackCOMRAM 000001
__pintcode               intcode      000008
__pintcode_body          intcode_body 0004E8
__ptext0                 text0        000676
__ptext1                 text1        00001A
__ptext10                text10       000636
__ptext11                text11       000662
__ptext12                text12       00055A
__ptext13                text13       00067C
__ptext14                text14       00066C
__ptext16                text16       000598
__ptext2                 text2        000648
__ptext3                 text3        00060A
__ptext4                 text4        0003A2
__ptext5                 text5        0002D8
__ptext6                 text6        000464
__ptext7                 text7        0005CE
__ptext8                 text8        000656
__ptext9                 text9        000624
__ramtop                 ramtop       000800
__size_of_ISR            (abs)        000000
__size_of___awdiv        (abs)        000000
__size_of_initEtc        (abs)        000000
__size_of_initInterrupts (abs)        000000
__size_of_initMotors     (abs)        000000
__size_of_initTimer      (abs)        000000
__size_of_initUI         (abs)        000000
__size_of_loop           (abs)        000000
__size_of_main           (abs)        000000
__size_of_millis         (abs)        000000
__size_of_newStatus      (abs)        000000
__size_of_setLEDs        (abs)        000000
__size_of_setLeftMotor   (abs)        000000
__size_of_setMotors      (abs)        000000
__size_of_setRightMotor  (abs)        000000
__size_of_setStatus      (abs)        000000
__size_of_timerInterrupt (abs)        000000
__smallconst             smallconst   000000
_flagStatus              bssCOMRAM    000034
_fractionCounter         bssCOMRAM    000030
_initEtc                 text14       00066C
_initInterrupts          text13       00067C
_initMotors              text12       00055A
_initTimer               text11       000662
_initUI                  text10       000636
_loop                    text1        00001A
_main                    text0        000676
_millis                  text9        000624
_millisCounter           bssCOMRAM    00002C
_newStatus               text8        000656
_setLEDs                 text7        0005CE
_setLeftMotor            text5        0002D8
_setMotors               text3        00060A
_setRightMotor           text4        0003A2
_setStatus               text2        000648
_status                  bssCOMRAM    000032
_timerInterrupt          text16       000598
btemp                    temp         000035
end_of_initialization    cinit        0005FC
int$flags                temp         000035
int_func                 intcode_body 0004E8
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
loop@next                cstackCOMRAM 000024
loop@now                 cstackCOMRAM 000028
newStatus@x              cstackCOMRAM 00000F
setLEDs@g                cstackCOMRAM 000010
setLEDs@r                cstackCOMRAM 000011
setLEDs@y                cstackCOMRAM 00000F
setLeftMotor@speed       cstackCOMRAM 000017
setMotors@left           cstackCOMRAM 00001B
setMotors@right          cstackCOMRAM 00001D
setRightMotor@speed      cstackCOMRAM 000017
setStatus@s              cstackCOMRAM 00000F
stackhi                  (abs)        0007FF
stacklo                  (abs)        000060
start                    init         000016
start_initialization     cinit        0005F0


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 110 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_loop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _loop *****************
 Defined at:
		line 31 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  now             4   39[COMRAM] unsigned long 
  next            4   35[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_initEtc
		_initInterrupts
		_initMotors
		_initTimer
		_initUI
		_millis
		_newStatus
		_setLEDs
		_setMotors
		_setStatus
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setStatus *****************
 Defined at:
		line 20 in file "main.c"
 Parameters:    Size  Location     Type
  s               2   14[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _setMotors *****************
 Defined at:
		line 44 in file "motors.c"
 Parameters:    Size  Location     Type
  left            2   26[COMRAM] int 
  right           2   28[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setLeftMotor
		_setRightMotor
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _setRightMotor *****************
 Defined at:
		line 59 in file "motors.c"
 Parameters:    Size  Location     Type
  speed           2   22[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
 This function is called by:
		_setMotors
 This function uses a non-reentrant model


 *************** function _setLeftMotor *****************
 Defined at:
		line 49 in file "motors.c"
 Parameters:    Size  Location     Type
  speed           2   22[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
 This function is called by:
		_setMotors
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   14[COMRAM] int 
  divisor         2   16[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   20[COMRAM] int 
  sign            1   19[COMRAM] unsigned char 
  counter         1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   14[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setLeftMotor
		_setRightMotor
 This function uses a non-reentrant model


 *************** function _setLEDs *****************
 Defined at:
		line 25 in file "ui.c"
 Parameters:    Size  Location     Type
  r               1    wreg     unsigned char 
  y               1   14[COMRAM] unsigned char 
  g               1   15[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  r               1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _newStatus *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  x               1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _millis *****************
 Defined at:
		line 7 in file "timer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   14[COMRAM] unsigned long 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _initUI *****************
 Defined at:
		line 11 in file "ui.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _initTimer *****************
 Defined at:
		line 22 in file "timer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _initMotors *****************
 Defined at:
		line 17 in file "motors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _initInterrupts *****************
 Defined at:
		line 4 in file "etc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _initEtc *****************
 Defined at:
		line 9 in file "etc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 114 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:         14       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_timerInterrupt
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _timerInterrupt *****************
 Defined at:
		line 11 in file "timer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
motors.c
		_initMotors    		CODE           	055A	0000	63
		_setLeftMotor  		CODE           	02D8	0000	203
		_setMotors     		CODE           	060A	0000	27
		_setRightMotor 		CODE           	03A2	0000	195

motors.c estimated size: 488

timer.c
		_millis        		CODE           	0624	0000	19
		_initTimer     		CODE           	0662	0000	11
		_timerInterrupt		CODE           	0598	0000	55

timer.c estimated size: 85

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c
		___awdiv       		CODE           	0464	0000	133

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c estimated size: 133

ui.c
		_setLEDs       		CODE           	05CE	0000	35
		_initUI        		CODE           	0636	0000	19

ui.c estimated size: 54

etc.c
		_initInterrupts		CODE           	067C	0000	7
		_initEtc       		CODE           	066C	0000	11

etc.c estimated size: 18

shared
		__initialization		CODE           	05F0	0000	13

shared estimated size: 13

main.c
		_loop          		CODE           	001A	0000	703
		_ISR           		CODE           	0008	0000	129
		_main          		CODE           	0676	0000	7
		_setStatus     		CODE           	0648	0000	15
		_newStatus     		CODE           	0656	0000	13

main.c estimated size: 867

